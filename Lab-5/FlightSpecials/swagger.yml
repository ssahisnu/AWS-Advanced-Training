---
swagger: "2.0"
info:
  version: "1.0"
  title: "Microservices - Flight Specials API"
  description: "Returns a list of Flight Specials"
basePath: "/dev"
schemes:
- "https"
paths:

  /flightspecials:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\n    \"payload\" : {},\n    \"operation\" : \"GET\"\
            ,\n    \"correlationId\" : \"$context.requestId\"\n}"
        uri: 'arn:aws:apigateway:REPLACE_AWS_REGION:lambda:path/2015-03-31/functions/arn:aws:lambda:REPLACE_AWS_REGION:REPLACE_AWS_ACCOUNTID:function:${stageVariables.LambdaFlightSpecials}/invocations'
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"

definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
